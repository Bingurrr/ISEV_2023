#!/usr/bin/env python3

PACKAGE = "obstacle_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("minPoints", int_t, 0, "minPoints", 30, 1, 100)
gen.add("epsilon", double_t, 0, "epsilon", 0.3, 0, 20)
gen.add("minClusterSize", int_t, 0, "minClusterSize", 100, 1, 1000)
gen.add("maxClusterSize", double_t, 0, "maxClusterSize", 10000, 1, 10000)

gen.add("xMinROI", double_t, 0, "xMinROI", 0.0, -200, 10)
gen.add("xMaxROI", double_t, 0, "xMaxROI", 8.0, -10, 200)
gen.add("yMinROI", double_t, 0, "yMinROI", -1.5, -200, 10)
gen.add("yMaxROI", double_t, 0, "yMaxROI", 1.5, -10, 200)
gen.add("zMinROI", double_t, 0, "zMinROI", -0.54, -2, 0)
gen.add("zMaxROI", double_t, 0, "zMaxROI", 2.0, -2, 100)

gen.add("xMinBoundingBox", double_t, 0, "xMinBoundingBox", 0.1, 0, 10);
gen.add("xMaxBoundingBox", double_t, 0, "xMaxBoundingBox", 1.5, 0, 10);
gen.add("yMinBoundingBox", double_t, 0, "yMinBoundingBox", 0.1, 0, 10);
gen.add("yMaxBoundingBox", double_t, 0, "yMaxBoundingBox", 1.5, 0, 10);
gen.add("zMinBoundingBox", double_t, 0, "zMinBoundingBox", 0.3, 0, 10);
gen.add("zMaxBoundingBox", double_t, 0, "zMaxBoundingBox", 3.0, 0, 10);

exit(gen.generate(PACKAGE, "obstacle_detection", "hyper_parameter"))
